#!/usr/bin/env bash
function alias_if_exists() {
  # Does the alias only if the aliased program is installed
    if command -v $2 > /dev/null; then
        alias "$1"="$2"
    fi
}


# Better defaults
alias crontab="VIM_CRONTAB=true crontab"
alias_if_exists 'diff' 'colordiff'
alias_if_exists 'nv' 'nvim'
alias_if_exists 'c' 'clear'
alias l.='ls -d .* --color=auto'
alias mount='mount |column -t'
alias h='history'
unalias j
alias j='jobs -l'


## Git
alias_if_exists 'g' 'git'
alias ga='git add'
alias gs='git status'
alias gcm='git commit -v'
alias gck='git checkout'
alias gu='git pull'
# alias gg='git graph'
unalias gd 2>/dev/null
alias gd='git diff'
alias gsu='git stash && git pull && git stash pop'
  # Note that gs is also ghostscript
alias ghostscript="/usr/local/bin/gs"

## Jupyter
# alias jc="jupyter console"
# alias jco="jupyter nbconvert"
# alias jn="jupyter notebook"
# alias jn-b="jupyter notebook --no-browser"

## Misc
alias my-ip="curl ipinfo.io/ip 2> /dev/null"
# alias spell='aspell check --dont-backup'
# alias grepc="grep -P --color=always" #Color grep
alias now='date +"%T"'
alias cdate='date +"%d-%m-%Y"'
alias printpath='echo $PATH | sed "s/:/\\n/g"'
# alias path='echo -e ${PATH//:/\\n}'
# Other
alias sep='seq -s = $(tput cols) | sed "s/[0-9]//g"'
alias rg='sep; rg'

## Tmux
alias tn='tmux new -s'
alias ta='tmux a -t'
alias td='tmux detach'
# function tm () {
#   # if installed:
#   # if not connected to an existing session, attach to it.
#   # if no session exists, create it and attach to it.

#   if hash tmux &> /dev/null; then
#     case $- in *i*)
#       [ -z "$TMUX" ] && tmux new -A -s $(whoami)
#     esac
#   else
#   fi
# }

###########################################################################################################################
# Function
# fzf
if command -v fzf > /dev/null; then

  # function fzf-history() {
  #     local tac
  #     if which tac > /dev/null; then
  #         tac="tac"
  #     else
  #         tac="tail -r"
  #     fi
  #     BUFFER=$(\history -n 1 | fzf)
  #     CURSOR=$#BUFFER
  # }
  # zle -N fzf-history
  # bindkey '^r' fzf-history

  fh() {
    print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
  }

  # fkill - kill process
  fkill() {
    local pid
    pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

    if [ "x$pid" != "x" ]
    then
      echo $pid | xargs kill -${1:-9}
    fi
  }

  v() {
    local file
    if [[ -f $1 ]]; then
        nvim $1
    else
        file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && nvim "${file}" || return 1
    fi
  }

  if command -v subl > /dev/null; then
    u() {
      local file
      file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && subl "${file}" || return 1
    }
  fi

  #less on fuzzy find
  fl() {
    less $(fzf)
  }

fi

## Ripgrep-all

if command -v rga > /dev/null; then
    alias rgim="rga --rga-adapters=+tesseract -j4"
    # Interactive rga
    rga-fzf() {
        RG_PREFIX="rga --files-with-matches"
        local file
        file="$(
            FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
                fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
                    --phony -q "$1" \
                    --bind "change:reload:$RG_PREFIX {q}" \
                    --preview-window="70%:wrap"
        )" &&
        echo "opening $file" &&
        xdg-open "$file"
    }
fi


###########################################################################################################################
# OS dependent aliases
case "$(uname -s)" in

   Darwin)
     # echo 'Mac OS X'

     alias clear-dnscache="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"
     alias bu="brew update && brew outdated | xargs brew upgrade  && brew cleanup -s --prune=0"

     # Apple Silicon
      if [ "$(uname -m)" = "arm64" ]; then
        alias brewr="arch -x86_64 /usr/local/bin/brew $@"
        alias leg="arch -x86_64 $@"
      fi

     ;;

   Linux)
     # echo 'Linux'
     ;;

   CYGWIN*|MINGW32*|MSYS*)
     # echo 'MS Windows'
     ;;

   # Add here more strings to compare
   # See correspondence table at the bottom of this answer

   *)
     # echo 'other OS'
     ;;
esac


# Shell dependent Alias (only zsh has global aliases)
case $SHELL in
*/zsh)
   # assume Zsh
   ;;
*/bash)
   # assume Bash
   ;;
*)
   # assume something else
   ;;
esac
