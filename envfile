# Environment Setup
# Shell Agnostic. Should work both with bash and zsh


###########################################################################################################################

# PATH

function prepend_path() {
  # Does the alias only if the aliased program is installed
    if [ -d $1 ]; then
        export PATH="$1:$PATH"
    fi
}

function append_path() {
  # Does the alias only if the aliased program is installed
    if [ -d $1 ]; then
        export PATH="$PATH:$1"
    fi
}

# prepend_path "/usr/local/bin"
# prepend_path "/usr/local/sbin"
# prepend_path "$HOME/bin"           # Custom scripts
# prepend_path "$HOME/.secbin"       # Secret custom scripts
# prepend_path "$HOME/.local/bin"
# append_path "$HOME/.neovim/node/bin"


###########################################################################################################################

# PYTHON


# set PYTHONPATH for local user packages
# export PYTHONPATH="$HOME/python-libs:$PYTHONPATH"


# if [ -d "$HOME/.pyenv" ]; then
#     # Python from pyenv
#     export PYENV_ROOT="$HOME/.pyenv"

#     if command -v pyenv > /dev/null; then
#         eval "$(pyenv init -)";
#     fi
#     if command -v pyenv-virtualenv-init > /dev/null; then
#         eval "$(pyenv virtualenv-init -)";
#     fi

#     export PYENV_VIRTUALENV_DISABLE_PROMPT=1

#     prepend_path "$PYENV_ROOT/bin"     # PYENV binaries from
# fi


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniforge/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniforge/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniforge/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniforge/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<



###########################################################################################################################

# DEFAULT COLORS/PROGRAMS

# CLI colors
# export CLICOLOR=1
# export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# Configure Editor
if command -v nvim > /dev/null; then
    export EDITOR='nvim'
else
    export EDITOR='vim'
fi


###########################################################################################################################

# Misc Software

# Add GOPATH
# export GOPATH=$HOME/go
# export PATH=$PATH:"$GOPATH/bin"


# Rust Path init
# export PATH="$HOME/.cargo/bin:$PATH"

# Fasd init
 # if command -v fasd > /dev/null; then
 #     eval "$(fasd --init auto)"
 # fi

# Ansible
# export ANSIBLE_NOCOWS=1

###########################################################################################################################

# OS specific
# So bash is brew's and not OS's
# export PATH="/usr/local/bin:$PATH"

case "$(uname -s)" in

   Darwin)
    export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
    export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
    ;;

   Linux)
    # source $HOME/.config/broot/launcher/bash/br

    ;;

   CYGWIN*|MINGW32*|MSYS*)

    ;;

   # Add here more strings to compare
   # See correspondence table at the bottom of this answer

   *)

    ;;
esac


# LOCAL ENV
if [ -f ~/.local-env ]; then
    source ~/.local-env
fi

